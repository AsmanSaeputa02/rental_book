services:
  web:
    build:
      context: .
    container_name: myproject
    ports:
      - "8003:8003"
    volumes:
      - ./:/app:cached
    working_dir: /app
    command: >
      gunicorn myproject.wsgi:application --bind 0.0.0.0:8003 --workers 3 --timeout 60
    depends_on:
      - db
    # ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå env (‡∏°‡∏µ DEBUG, SECRET_KEY, DB_*)
    # env_file:
    #   - .env.prod
    environment:
      DB_NAME: bookrental
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: 9876
    restart: always

  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "7771:9876"           # host:container
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: bookrental
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: postgres -p 9876

  nginx:
    image: nginx:alpine
    container_name: bookrental-nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/app/staticfiles:ro     # üëà ‡πÉ‡∏´‡πâ nginx ‡πÄ‡∏´‡πá‡∏ô static
    ports:
      - "80:80"
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
